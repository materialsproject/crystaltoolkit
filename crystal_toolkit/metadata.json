{
  "src/lib/components/GraphComponent.react.js": {
    "description": "GraphComponent renders a force-directed graph using \nreact-graph-vis by @crubier and vis.js",
    "displayName": "GraphComponent",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks"
      },
      "graph": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "A graph that will be displayed when this component is rendered"
      },
      "options": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Display options for the graph"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      }
    }
  },
  "src/lib/components/JSONViewComponent.react.js": {
    "description": "JSONViewComponent renders JSON using\nreact-json-view from @mac-s-g",
    "displayName": "JSONViewComponent",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks"
      },
      "src": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "name": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "\"rjv-default\"",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "\"circle\"",
          "computed": false
        }
      },
      "identWidth": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.integer"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "8",
          "computed": false
        }
      },
      "collapsed": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "custom",
              "raw": "PropTypes.integer"
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "collapseStringsAfterLength": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "custom",
              "raw": "PropTypes.integer"
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "groupArraysAfterLength": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.integer"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "100",
          "computed": false
        }
      },
      "enableClipboard": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "displayObjectSize": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "displayDataTypes": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "defaultValue": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "sortKeys": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "validationMessage": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "\"Validation Error\"",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      }
    }
  },
  "src/lib/components/Simple3DSceneComponent.react.js": {
    "description": "Simple3DSceneComponent is intended to draw simple 3D scenes using the popular\nThree.js scene graph library. In particular, the JSON representing the 3D scene\nis intended to be human-readable, and easily generated via Python. In future, a\nlong-term approach would be to develop a library to generate Three.js JSON directly\ninside Python to make this component redundant.",
    "displayName": "Simple3DSceneComponent",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks"
      },
      "data": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Simple3DScene JSON"
      },
      "settings": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Options used for generating scene"
      },
      "toggleVisibility": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Hide/show nodes in scene by name (key), value is 1 to show the node\nand 0 to hide it"
      },
      "downloadRequest": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Increment to trigger a screenshot or scene download."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      }
    }
  }
}