[project]
name = "crystal_toolkit"
dynamic = ["version"]
description = """Crystal Toolkit is a web app framework from the Materials Project allowing Python
developers to easily make an interactive web app to display materials science information. As a
showcase of the frameworkâ€™s capabilities, the Crystal Toolkit app allows you to import, view,
analyze and transform crystal structures and molecules."""
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
authors = [{ name = "Matt Horton", email = "mkhorton@lbl.gov" }]

dependencies = [
    "pymatgen",
    "webcolors",
    "crystaltoolkit-extension",
    "shapely",
    "scikit-learn",
    "scikit-image",
]

[project.optional-dependencies]
server = [
    "dash<2.6",
    "dash-daq",
    "gunicorn[gevent]",
    "redis",
    "Flask-Caching",
    "dash-mp-components",
    "robocrys",
    "habanero",
    "hiphive",
    "dash-extensions<=0.1.5",
]
temdiff = ["py4DSTEM>=0.13.11"]
fermi = ["ifermi", "pyfftw"]
vtk = ["dash-vtk"]
localenv = ["dscribe"]
figures = ["kaleido"]
dev = [
    "black",
    "pre-commit",
    "dash[testing]<2.6",
    "sphinx_rtd_theme",
    "recommonmark",
    "dephell",
    "jinja2<3.1",
]

[project.urls]
repo = "https://github.com/materialsproject/crystaltoolkit"
docs = "https://docs.crystaltoolkit.org"

[tool.setuptools.packages.find]
exclude = ["docs_rst"]

[tool.setuptools_scm]
write_to = "crystal_toolkit/_version.py"
write_to_template = '__version__ = "{version}"'
local_scheme = "no-local-version"

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.ruff]
target-version = "py38"
select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "PLE", # pylint error
    "PLW", # pylint warning
    "Q",   # flake8-quotes
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "TID", # tidy imports
    "UP",  # pyupgrade
    "W",   # pycodestyle
    "YTT", # flake8-2020
]
ignore = [
    "B904",   # Within an except clause, raise exceptions with raise ... from err
    "C408",   # Unnecessary dict call - rewrite as a literal
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D107",   # Missing docstring in __init__
    "D205",   # 1 blank line required between summary line and description
    "E501",   # Line too long
    "E731",   # Do not assign a lambda expression, use a def
    "SIM105", # Use contextlib.suppress(ValueError) instead of try-except-pass
    "SIM115", # Use context handler for opening files
]
pydocstyle.convention = "google"
isort.known-third-party = ["wandb"]

[tool.ruff.per-file-ignores]
"**/tests/*" = ["D"]
"jupyterlab-extension/setup.py" = ["D"]
"__init__.py" = ["F401"]
# future annotations incompatible with pydantic BaseModel schemas below py 3.10
# TODO remove once py 3.10 is the minimum supported version
"crystal_toolkit/settings.py" = ["UP007"]
# TODO fix all undefined variables in bandstructure.py
"crystal_toolkit/components/bandstructure.py" = ["F821"]

[tool.pytest.ini_options]
addopts = "-p no:warnings"

[tool.codespell]
ignore-words-list = "nd,te"
